name: Build and Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build:
    runs-on: macos-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Swift
      uses: swift-actions/setup-swift@v1
      with:
        swift-version: '5.9'
        
    - name: Get version
      id: get_version
      run: |
        if [[ $GITHUB_REF == refs/tags/* ]]; then
          echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
        else
          echo "VERSION=dev-$(date +%Y%m%d-%H%M%S)" >> $GITHUB_OUTPUT
        fi
        
    - name: Build RouteX
      run: |
        chmod +x build.sh
        ./build.sh
        
    - name: Create DMG
      run: |
        # Create DMG using hdiutil
        echo "Creating DMG file..."
        hdiutil create -volname "RouteX ${{ steps.get_version.outputs.VERSION }}" -srcfolder build/RouteX.app -ov -format UDZO RouteX-${{ steps.get_version.outputs.VERSION }}.dmg
        
        # Verify DMG
        echo "Verifying DMG file..."
        hdiutil verify RouteX-${{ steps.get_version.outputs.VERSION }}.dmg
        
    - name: Copy ZIP to root directory
      run: |
        # Copy RouteX.zip from build directory to root for release upload
        cp build/RouteX.zip RouteX-${{ steps.get_version.outputs.VERSION }}.zip
        
    - name: Create Release (Tagged Releases)
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v1
      with:
        files: |
          RouteX-${{ steps.get_version.outputs.VERSION }}.dmg
          RouteX-${{ steps.get_version.outputs.VERSION }}.zip
        generate_release_notes: true
        draft: false
        prerelease: false
        body: |
          ## RouteX ${{ steps.get_version.outputs.VERSION }}
          
          ### Installation
          1. **DMG Installation**: Download the DMG file, open it, and drag RouteX to Applications
          2. **ZIP Installation**: Download the ZIP file, extract it, and drag RouteX.app to Applications
          3. Launch RouteX from Applications
          4. Grant administrator privileges when prompted for route modifications
          
          ### System Requirements
          - macOS 12.0 (Monterey) or later
          - Apple Silicon (M1/M2/M3) or Intel Mac - Universal binary supports both architectures
          - Administrator privileges (required for route modification)
          
          ### What's New
          - Universal binary for Apple Silicon and Intel Macs
          - Graphical interface for network route management
          - Smart input handling for macOS routing shorthand
          - Phantom route discovery for blackhole/reject routes
          
          ### Features
          - Add, edit, and delete network routes
          - Route type control (Auto, Network, Host)
          - Advanced routing features (flags, metrics, interface scope)
          - Real-time validation and safety checks
          
          ### Support
          - [GitHub Issues](https://github.com/awgh/routex/issues)
          - [Documentation](https://github.com/awgh/routex#readme)
          
          ### Checksums
          ```
          DMG SHA256: $(shasum -a 256 RouteX-${{ steps.get_version.outputs.VERSION }}.dmg | cut -d' ' -f1)
          ZIP SHA256: $(shasum -a 256 RouteX-${{ steps.get_version.outputs.VERSION }}.zip | cut -d' ' -f1)
          ```
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Upload Build Artifacts (Manual Trigger)
      if: github.event_name == 'workflow_dispatch'
      uses: actions/upload-artifact@v4
      with:
        name: RouteX-${{ steps.get_version.outputs.VERSION }}
        path: |
          RouteX-${{ steps.get_version.outputs.VERSION }}.dmg
          RouteX-${{ steps.get_version.outputs.VERSION }}.zip
          
    - name: Notify Success
      run: |
        echo "âœ… Build completed successfully!"
        echo "ðŸ“¦ DMG: RouteX-${{ steps.get_version.outputs.VERSION }}.dmg"
        echo "ðŸ“¦ ZIP: RouteX-${{ steps.get_version.outputs.VERSION }}.zip"
        if [[ "${{ github.ref }}" == refs/tags/* ]]; then
          echo "ðŸš€ Release published: https://github.com/awgh/routex/releases/latest"
        else
          echo "ðŸ“‹ Artifacts uploaded to Actions tab"
        fi 